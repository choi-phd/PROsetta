% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configPROsetta_2.R
\name{RunCFA}
\alias{RunCFA}
\title{Run a confirmatory factor analysis}
\usage{
RunCFA(Config, Data, estimator = "WLSMV", std.lv = TRUE, ...)
}
\arguments{
\item{Config}{A PROsetta.Config object. See \code{\linkS4class{PROsetta.Config}}.}

\item{Data}{A PROsetta.Data object. See \code{\link{LoadData}} for loading a dataset.}

\item{estimator}{The estimator to be used. Passed onto \code{\link[lavaan]{cfa}} in \href{https://CRAN.R-project.org/package=lavaan}{\code{lavaan}} package.}

\item{std.lv}{If \code{TRUE}, the metric of the latent variable is determined by fixing their (residual) variances to 1.0. If \code{FALSE}, the metric of each latent variable is determined by fixing the factor loading of the first indicator to 1.0. Passed onto \code{\link[lavaan]{cfa}}.}

\item{...}{Additional arguments to pass onto \code{\link[lavaan]{cfa}}.}
}
\value{
A list containing the CFA results. The models are as follows:
\item{all}{A one-factor model where all items in the \code{itemmap} slot of \code{Data} are loaded onto the factor.}
\item{anchor}{A one-factor model where the items in the \code{anchor} slot of \code{Data} are loaded onto the factor.}
}
\description{
Performs a one-factor confirmatory factor analysis (CFA) to test unidimensionality.
}
\examples{
\dontrun{
inputData = LoadData(new.Config)
outCFA = RunCFA(new.Config, inputData)
summary(outCFA$all, fit.measures = TRUE, standardized = TRUE)
summary(outCFA$anchor, fit.measures = TRUE, standardized = TRUE)
}
}
